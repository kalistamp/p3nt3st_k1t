

There are dozens of tools for automating Google Dorking and collecting search results.

Many of them are based on the python module "googlesearch". 

It is extremely simple. 

But it can be applied to a multitude of investigative purposes. 

You can learn it in two minutes and use it to create the perfect search automation script for your purposes.

1. Installation:

pip install googlesearch-python 

2. Simple search:

from googlesearch import search
search("Osint")

3. Search with output URL of the results to the console:

for url in search('Osint'):
    print(url)

4.  Search in Russian:

search('Osint', lang="ru")

5.  Search with a fixed number of results:

search('Osint', num_results=3)


The picture above shows an example of search automation with results output to a text file.

https://github.com/MarioVilas/googlesearch



* * *


Bugbounty Github Dorks:

"access_key"
"access_token"
"amazonaws"
"apidocs"
"api.googlemaps AIza"
"api_key"
"apikey"
"api_secret"
"apiSecret"
"app_key"
"appkey"
"appkeysecret"
"application_key"
"app_secret"
"appsecret"
"appspot"
"auth"
"authorizationToken"
"auth_token"
"aws_access"
"aws_access_key_id"
"aws_key"
"aws_secret"
"AWSSecretKey"
"aws_token"
"bashrc password"
"bucket_password"
"client_secret"
"cloudfront"
".mlab.com password"
extension:avastlic support.avast.com
extension:bat
extension:cfg
extension:dbeaver-data-sources.xml
extension:env
extension:exs
extension:ini
extension:json api.forecast.io
extension:json googleusercontent client_secret
extension:json mongolab.com
extension:pem
extension:pem private
extension:ppk
extension:ppk private
extension:properties
extension:sh
extension:sls
extension:sql
extension:sql mysql dump
extension:sql mysql dump password
extension:yaml mongolab.com
extension:zsh
